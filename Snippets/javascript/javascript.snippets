snippet cl "console.log(...)" b
console.log($0);
endsnippet

snippet cll "console.log(...)" b
console.log('$1', $1);
endsnippet

snippet ce "console.error(...)" b
console.error($0);
endsnippet

snippet cc "createClass" b
var ${1:`!p snip.rv = ''.join(x.title() for x in re.sub('\.js$', '', snip.basename or 'ModuleName').split('_'))`} = React.createClass({
	/**
  * @return {Object}
  */
	render: function() {
		return (
			$0
		);
	}
});

module.exports = $1;
endsnippet

snippet tg "create tag" b
<$1>
</$1>
endsnippet


snippet im "import * from *" b
import $1 from '$2';
$0
endsnippet

snippet t
<tag>${VISUAL:inside text/should/is/g}</tag>
endsnippet

snippet obj 
const $1 = {
  $2: $3,
  $4: $5,
  $6: $7,
};
$0
endsnippet

snippet ef
const $1 = ($2) => {
  $3
};
$0
endsnippet

snippet map
const $1 = $2.map($3 => {
  $4
});
$0
endsnippet

snippet filter
const $1 = $2.filter($3 => {
  $4
});
$0
endsnippet

snippet for "for loop" b
for (let i = $1; i $2; $3) {
  $4
}
endsnippet

snippet if "if ..." b
if ($1) {
  $2
}
endsnippet

snippet ifel "if ..." b
if ($1) {
  $2
} else {
  $3 
}
endsnippet

snippet env
\begin{${1:enumerate}}
    $0
\end{$1}
endsnippet


snippet ifndef
#ifndef ${1:SOME_DEFINE}
#define $1
$0
#endif /* $1 */
endsnippet

snippet dest "const {  } = something" b
const { $1 } = $2;
endsnippet

snippet exp "export default something" b
export default $1;
endsnippet

snippet pr "property of the object" b
$1: $2,
$3
endsnippet




